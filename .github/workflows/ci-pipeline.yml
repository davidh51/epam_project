name: CI Pipeline

on:
  push:
    branches:
      - master  # Trigger on pushes to the main branch
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC

permissions:      # permissions for the github_token to authenticate the github_container
  packages: write
  contents: read

env:
  CI_REGISTRY: ghcr.io
  CI_PROJECT_NAMESPACE: ${{ github.repository_owner }}
  CI_PROJECT_NAME: ${{ github.repository }}
  IMAGE_TAG: ${{ github.run_number }}.0.0  # Semantic Versioning example: major.minor.patch

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Docker Buildx (for advanced builds)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Log in to GitHub Container Registry
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Lint Dockerfile
    - name: Lint Dockerfile
      uses: hadolint/hadolint-action@master
      with:
        dockerfile: Dockerfile

    # Build Docker Image
    - name: Build Docker Image
      run: |
        docker build -t $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$IMAGE_TAG .

    # Test Docker Image (replace with actual test commands)
    - name: Test Docker Image
      run: |
        docker run --rm $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$IMAGE_TAG echo "Test successful!"

    # Push Docker Image to GitHub Container Registry
    - name: Push Docker Image
      run: |
        docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$IMAGE_TAG
